<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="br.pucpr.authserver.users.controller.UserControllerTest" tests="17" skipped="0" failures="0" errors="0" timestamp="2024-02-21T03:44:04" hostname="Giovannes-Mac-mini-M2.local" time="0.043">
  <properties/>
  <testcase name="update should work if the ADMIN is updating any user()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.004"/>
  <testcase name="delete should return NOT_FOUND if the user does not exists()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="update should return NO_CONTENT if the service returns null()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="getById must return NOT FOUND if the user is not found()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="login should return UNAUTHORIZED if the credentials are invalid()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.022"/>
  <testcase name="update should throw ForbiddenException if the user is trying to update other user()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.0"/>
  <testcase name="login should return the user if the credentials are valid()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="list should throw BadRequestException with a invalid sort parameter()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="list should use ASC as default sort parameter()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="getById must returns the user()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="insert must return the new user with CREATED code()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.002"/>
  <testcase name="list should return all found users with the given sort parameter()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="update should work if the user is updating himself()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="list should list by the role in uppercase if the role is provided()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="list should ignore the sort parameter if the role is provided()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="delete should return OK if the user gets deleted()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <testcase name="update should forward NotFoundException if the user is not found()" classname="br.pucpr.authserver.users.controller.UserControllerTest" time="0.001"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
